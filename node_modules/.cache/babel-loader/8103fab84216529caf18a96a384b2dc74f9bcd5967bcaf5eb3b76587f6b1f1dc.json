{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.job ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.job.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"The job ID is: \" + _toDisplayString($props.id), 1 /* TEXT */), _createCommentVNode(\" $route.params.id -> '':id' used in index.js file in router-\"), _createElementVNode(\"p\", null, _toDisplayString($data.job.details), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$data","job","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","title","$props","id","_createCommentVNode","details"],"sources":["/Users/terezzab/Desktop/VUE_FullStackApp/router-project/src/views/jobs/JobDetails.vue"],"sourcesContent":["<template>\n    <div v-if=\"job\">\n        <h1>{{ job.title }}</h1>\n        <p>The job ID is: {{ id }}</p>\n        <!-- $route.params.id -> '':id' used in index.js file in router--->\n        <p>{{ job.details }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: [ 'id' ],\n    data() {\n        return {\n            job: null\n        }\n    },\n    mounted() {\n        console.log(id);\n        fetch('http://localhost:3000/jobs/' + this.id)\n        .then(res => res.json())\n        .then(data => this.jobs = data)\n        .catch(err => console.log(err.message))\n    }\n}\n</script>\n\n<style scoped>\n</style>"],"mappings":";;;;;SACeA,KAAA,CAAAC,GAAG,I,cAAdC,mBAAA,CAKM,OAAAC,UAAA,GAJFC,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBL,KAAA,CAAAC,GAAG,CAACK,KAAK,kBAChBF,mBAAA,CAA8B,WAA3B,iBAAe,GAAAC,gBAAA,CAAGE,MAAA,CAAAC,EAAE,kBACvBC,mBAAA,gEAAmE,EACnEL,mBAAA,CAAwB,WAAAC,gBAAA,CAAlBL,KAAA,CAAAC,GAAG,CAACS,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}